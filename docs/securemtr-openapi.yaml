openapi: 3.1.0
info:
  title: Secure Controls / Beanbag Cloud API (Confirmed Subset)
  version: "0.4.0"
  description: >
    Confirmed REST endpoints and WebSocket connection semantics observed from live traffic.
    Only behaviors *directly evidenced* by captures are included.
    All dynamic identifiers are placeholders (e.g., {token}, {sessionId}, {gatewayID}).
servers:
  - url: https://app.beanbag.online
    description: Confirmed REST base
tags:
  - name: Login
  - name: User
  - name: Gateway
  - name: WebSocket
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    RequestId:
      name: Request-id
      in: header
      required: true
      schema: { type: string, example: "1" }
      description: Observed header on REST requests. Confirmed value "1".
    SessionId:
      name: Session-id
      in: header
      required: true
      schema: { type: string, example: "{sessionId}" }
      description: Session id from login; required on subsequent REST and in WS upgrade.
  schemas:
    RestEnvelope:
      type: object
      required: [ RI ]
      properties:
        RI:
          type: string
          description: Result indicator. Confirmed success value "1".
          example: "1"
        D:
          description: Data payload (varies by endpoint).
    LoginULC:
      type: object
      required: [ ULC ]
      properties:
        ULC:
          type: object
          required: [ OI, P, NT, UEI ]
          properties:
            OI:
              type: integer
              example: 1550005
              description: Observed constant in captures.
            P:
              type: string
              pattern: "^[0-9a-fA-F]{32}$"
              example: "{sha1(password)[:32]}"
              description: Confirmed derivation: sha1(password).hexdigest() sliced to 32 hex chars.
            NT:
              type: string
              example: "SetLogin"
            UEI:
              type: string
              format: email
              example: "{email}"
    LoginData:
      type: object
      properties:
        UI: { type: integer, description: user id, example: 0 }
        SI: { type: integer, description: session id, example: 0 }
        GD:
          type: array
          description: Gateway descriptors (minimal fields confirmed).
          items:
            type: object
            properties:
              GMI: { type: string, example: "{gatewayID}" }
              SN:  { type: string, example: "{serial}" }
              HN:  { type: string, example: "{hostname}" }
              CS:  { type: integer }
              UR:  { type: integer }
              HI:  { type: integer }
              DT:  { type: integer }
              DN:  { nullable: true }
        JT:  { type: string, description: ES256 JWT; used as Bearer token, example: "{token}" }
        JTT: { type: integer, description: JWT timestamp (epoch ms) }
        USL: { type: array, items: {} }
        UNL: { nullable: true }
    UserInformationData:
      type: object
      properties:
        T:   { type: string }
        UPD:
          type: object
          properties:
            FN: { type: string, example: "{firstName}" }
            LN: { type: string, example: "{lastName}" }
            MN: { nullable: true }
            UEI:{ nullable: true }
        CA:
          type: object
          properties:
            DA: { nullable: true }
            C:  { nullable: true }
            PC: { nullable: true }
        IPD:
          type: object
          properties:
            FN: { nullable: true }
            LN: { nullable: true }
            CN: { nullable: true }
            MN: { nullable: true }
    IsGatewayConnectedData:
      oneOf:
        - { type: integer, example: 1701 }
        - { type: string }
paths:
  /api/UserRestAPI/LoginRequest:
    post:
      tags: [ Login ]
      summary: Login (confirmed ULC envelope)
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/LoginULC' }
            examples:
              sample:
                value:
                  ULC: { OI: 1550005, P: "{sha1(password)[:32]}", NT: "SetLogin", UEI: "{email}" }
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: Login success (confirmed structure)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RestEnvelope'
                  - type: object
                    properties:
                      D: { $ref: '#/components/schemas/LoginData' }
  /api/UserRestAPI/GetInstallations:
    get:
      tags: [ User ]
      summary: Get installations (confirmed)
      security: [ { bearerAuth: [] } ]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: Confirmed envelope with RI/D
          content:
            application/json:
              schema: { $ref: '#/components/schemas/RestEnvelope' }
              examples:
                empty: { value: { RI: "1", D: [] } }
  /api/UserRestAPI/GetUserInformation:
    get:
      tags: [ User ]
      summary: Get user information (confirmed)
      security: [ { bearerAuth: [] } ]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: Confirmed envelope with user data
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RestEnvelope'
                  - type: object
                    properties:
                      D: { $ref: '#/components/schemas/UserInformationData' }
  /api/UserRestAPI/IsGatewayConnected:
    get:
      tags: [ Gateway ]
      summary: Is gateway connected (confirmed)
      security: [ { bearerAuth: [] } ]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/SessionId'
        - name: gatewayMacId
          in: query
          required: true
          schema: { type: string, example: "{gatewayID}" }
      responses:
        '200':
          description: Confirmed envelope with scalar data
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/RestEnvelope'
                  - type: object
                    properties:
                      D: { $ref: '#/components/schemas/IsGatewayConnectedData' }
x-websocket:
  description: |
    Confirmed WebSocket connection:
      • URL: wss://app.beanbag.online/api/TransactionRestAPI/ConnectWebSocket
      • Subprotocol: BB-BO-01
      • Required headers:
          - Authorization: Bearer {token}
          - Session-id: {sessionId}
          - Request-id: 1

    After 101 Switching Protocols, there is no app-layer "Authorize".
    The first client frame is a JSON "Request".

    Envelope (client): V="1.0", DTS=<epoch sec>, I="{sessionId}-{rand32}", M="Request", P=[ {GMI,HI,SI}, [args] ]
    Envelope (server reply): adds "R"; Envelope (server notify): uses M="Notify" with P=[{GMI,SI,HI:4}, [slot, {I,V,OT,D}] ]

    Schedule (program) semantics (confirmed):
      • program.read  (HI:22, SI:17,  [index]) returns [{ "I": index, "D":[ {"O":<minutesFromMidnight>,"T":<code>}, ... ] }]
      • program.write (HI:21, SI:17,  [ { "I": index, "D":[ ... ] } ]) writes the entire program; reply R:0.
      • Observed mapping: index 2 == Boost schedule (slot 2). Index 1 likely primary.
      • Codes: T=1 => Boost ON, T=0 => Boost OFF, T=255 => sentinel/unused (padding).
      • Each day uses a fixed number of change-points padded by {O:65535,T:255}; O is minutes since midnight.
  connection:
    url: wss://app.beanbag.online/api/TransactionRestAPI/ConnectWebSocket
    subprotocols: [ "BB-BO-01" ]
    headers:
      - name: Authorization
        required: true
        example: "Bearer {token}"
      - name: Session-id
        required: true
        example: "{sessionId}"
      - name: Request-id
        required: true
        example: "1"
  confirmedCalls:
    - name: zones.read
      hi: 49
      si: 11
    - name: time.tick
      hi: 2
      si: 103
      args: [ <DTS> ]
    - name: schedules.summary
      hi: 5
      si: 1
    - name: device.metadata.read
      hi: 17
      si: 11
    - name: device.config.read
      hi: 14
      si: 11
    - name: state.read
      hi: 3
      si: 1
      responseBlocks:
        - si: 33
          note: primary immersion block (mode item I:6; slot=1)
        - si: 16
          note: boost immersion block (boost & flags; slot=2)
    - name: energy.history.read
      hi: 9
      si: 36
      args: [ <windowIndex> ]
    - name: program.read
      hi: 22
      si: 17
      args: [ <index> ]   # Observed: 2 == boost program
    - name: program.write
      hi: 21
      si: 17
      args: [ { I: <index>, D: [ { O: <minutes>, T: 0|1|255 }, ... ] } ]
    - name: mode.write.primary
      hi: 2
      si: 15
      args: [ 1, { I: 6, V: 0|2 } ]  # 0=Off, 2=On (slot 1)
      notify:
        block: 33
        item: 6
    - name: boost.timed.start
      hi: 2
      si: 16
      args: [ 2, { D: <minutes>, I: 4, OT: 2, V: 0 } ]   # slot 2
      notify:
        block: 16
        items:
          - { I: 4, V: 1, OT: 2, D: <minutes|countdown> }
          - { I: 9, V: <endTimeMinutesSinceMidnight> }
          - { I: 10, V: 0 }  # status flag observed; semantics TBD
      notes: >
        Countdown Notifies are not guaranteed during a running boost.
        Rely on I:4 (active) and I:9 (end time).
    - name: boost.timed.stop
      hi: 2
      si: 16
      args: [ 2, { D: 0, I: 4, OT: 2, V: 0 } ]
      notify:
        block: 16
        items:
          - { I: 4, V: 0, OT: 0, D: 0 }
          - { I: 9, V: <baselineMinutes> }
          - { I: 10, V: 0 }
    - name: boost.timed.toggle
      hi: 2
      si: 16
      args: [ 2, { I: 27, V: 0|1 } ]  # 0=off, 1=on
      notify:
        block: 16
        item: 27
